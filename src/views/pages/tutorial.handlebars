{{!-- Assembly Commands Documentation --}}
<title>Tutorial Page</title>
{{#> navbar }}{{/navbar}}
<section id="tutorial">
  <h1>AsmVis16 Instruction Set Documentation</h1>

  <h2>Instruction Set</h2>
  <table>
    <thead>
      <tr>
        <th>*Instruction</th>
        <th>Description</th>
        <th>Parameters</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>MOV</td>
        <td>Moves a value into a register.</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>ADD</td>
        <td>Adds value from register or constant into the destination register</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>SUB</td>
        <td>Subtracts value from register or constant into the destination register</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>MUL</td>
        <td>Multiplies value from register or constant into the destination register</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>DIV</td>
        <td>
          Divides value from register or constant into the destination register and the
          remainder (if any) in the REM register.
        </td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>INC</td>
        <td>Increments the value in a register by 1.</td>
        <td><code>register</code></td>
      </tr>
      <tr>
        <td>DEC</td>
        <td>Decrements the value in a register by 1.</td>
        <td><code>register</code></td>
      </tr>
      <tr>
        <td>MOD</td>
        <td>Calculates the modulus of two values into the destination register</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>NEG</td>
        <td>Negates the value in a register.</td>
        <td><code>register</code></td>
      </tr>
      <tr>
        <td>AND</td>
        <td>Performs a bitwise AND operation between two values.</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>OR</td>
        <td>Performs a bitwise OR operation between two values.</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>XOR</td>
        <td>Performs a bitwise XOR operation between two values.</td>
        <td><code>destination_register, source_value_or_register</code></td>
      </tr>
      <tr>
        <td>NOT</td>
        <td>Performs a bitwise NOT operation on a value.</td>
        <td><code>register</code></td>
      </tr>
      <tr>
        <td>HLT</td>
        <td>Halts the execution of the program.</td>
        <td><code>None</code></td>
      </tr>
      <tr>
        <td>NOP</td>
        <td>No operation; the program continues to the next instruction.</td>
        <td><code>None</code></td>
      </tr>
      <tr>
        <td>JZ</td>
        <td>Jumps to the destination if the register is zero</td>
        <td><code>register, destination</code></td>
      </tr>
      <tr>
        <td>JNZ</td>
        <td>Jumps to the destination if the register is not zero</td>
        <td><code>register, destination</code></td>
      </tr>
      <tr>
        <td>JLT</td>
        <td>Jumps to the destination if register1 is less than register 2</td>
        <td><code>register1, register2, destination</code></td>
      </tr>
      <tr>
        <td>JGT</td>
        <td>Jumps to the destination if register1 is greater than register2</td>
        <td><code>register1, register2, destination</code></td>
      </tr>
      <tr>
        <td>JET</td>
        <td>Jumps to the destination if register1 equal to register2</td>
        <td><code>register1, register2, destination</code></td>
      </tr>
      <tr>
        <td>JMP</td>
        <td>Unconditionally jumps to a specified address.</td>
        <td><code>address</code></td>
      </tr>
    </tbody>
  </table>

  <h2>Register Descriptions</h2>
  <table>
    <thead>
      <tr>
        <th>Register</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>R0</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R1</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R2</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R3</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R4</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R5</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R6</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R7</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R8</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R9</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R10</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R11</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R12</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R13</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R14</td>
        <td>General-purpose register</td>
      </tr>
      <tr>
        <td>R15</td>
        <td>General-purpose register</td>
      </tr>
        <td>Remainder</td>
        <td>If a remainder was calculated, resulting remainder is stored here</td>
      </tr>
        <td>Instruction Pointer</td>
        <td>Current targeted line by interpreter</td>
      </tr>
      
      
    </tbody>
  </table>

  <h2>Constants</h2>
    <table>
    <thead>
      <tr>
        <th>MAX_NUM:</th>
        <th>32,767 (Maximum 16-bit signed integer)</th>
      </tr>
      <tr>
        <th>MIN_NUM:</th>
        <th>-32,768 (Minimum 16-bit signed integer)</th>
      </tr>
    </thead>
    </table>
</section>
